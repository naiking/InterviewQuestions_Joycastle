{"version":3,"sources":["file:///C:/win11_PD/study/test/assets/scripts/utils/ArrayUtils.ts"],"names":["ArrayUtils","randomAry","ary","rdmIndex","len","length","tmp","i","Math","floor","random","stringArrayToNumberArray","arr","map","x","filterRepeat","Set","containsAll","aryA","aryB","num","indexOf"],"mappings":";;;iBAIaA,U;;;;;;;;;;;;;AAJb;AACA;AACA;AACA;4BACaA,U,GAAN,MAAMA,UAAN,CAAiB;AACJ,eAATC,SAAS,CAACC,GAAD,EAAwB;AACpC,cAAIC,QAAJ;AACA,cAAIC,GAAW,GAAGF,GAAG,CAACG,MAAtB;AACA,cAAIC,GAAJ;;AACA,eAAK,IAAIC,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGH,GAA5B,EAAiCG,CAAC,EAAlC,EAAsC;AAClCJ,YAAAA,QAAQ,GAAGI,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBN,GAAG,GAAGG,CAAvB,CAAX,CAAf;AACAD,YAAAA,GAAG,GAAGJ,GAAG,CAACK,CAAD,CAAT;AACAL,YAAAA,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACC,QAAD,CAAZ;AACAD,YAAAA,GAAG,CAACC,QAAD,CAAH,GAAgBG,GAAhB;AAGH;AACJ;AACD;;;AAC+B,eAAxBK,wBAAwB,CAACC,GAAD,EAA0B;AACrD,iBAAOA,GAAG,CAACC,GAAJ,CAAQC,CAAC,IAAI,CAACA,CAAd,CAAP;AACH;AACD;AACJ;;;AACuB,eAAZC,YAAY,CAACb,GAAD,EAA0B;AACzC,iBAAO,CAAC,GAAG,IAAIc,GAAJ,CAAQd,GAAR,CAAJ,CAAP;AACH;AACD;;;AACkB,eAAXe,WAAW,CAACC,IAAD,EAAiBC,IAAjB,EAA0C;AACxD,eAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AACpB,gBAAIC,IAAI,CAACE,OAAL,CAAaD,GAAb,KAAmB,CAAC,CAAxB,EAA2B;AACzB,qBAAO,KAAP;AACD;AACF;;AACD,iBAAO,IAAP;AACH;;AA/BmB,O","sourcesContent":["/** Created by Naiking.\r\n *  2023-06-21 15:31:54\r\n *  \r\n */\r\nexport class ArrayUtils {\r\n    static randomAry(ary: Array<any>): void {\r\n        var rdmIndex: number;\r\n        var len: number = ary.length;\r\n        var tmp: any;\r\n        for (var i: number = 0; i < len; i++) {\r\n            rdmIndex = i + Math.floor(Math.random() * (len - i));\r\n            tmp = ary[i];\r\n            ary[i] = ary[rdmIndex];\r\n            ary[rdmIndex] = tmp;\r\n\r\n\r\n        }\r\n    }\r\n    /**string[]----number[] */\r\n    static stringArrayToNumberArray(arr: string[]): number[] {\r\n        return arr.map(x => +x);\r\n    }\r\n    /**过滤掉重复元素 \r\n     * 注意：不修改原始ary*/\r\n    static filterRepeat(ary: number[]): number[] {\r\n        return [...new Set(ary)]; \r\n    }\r\n    /**判断a是否是b的子集*/\r\n    static containsAll(aryA: number[], aryB: number[]): boolean {\r\n        for (let num of aryA) {\r\n          if (aryB.indexOf(num)==-1) {\r\n            return false; \r\n          }\r\n        }\r\n        return true;\r\n    }\r\n}"]}