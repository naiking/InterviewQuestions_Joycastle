{"version":3,"sources":["file:///C:/win11_PD/study/test/assets/scripts/CheckArray.ts"],"names":["CheckArray","checkDoubleAryWithSum","arr1","arr2","target","sort","a","b","left","right","length","sum"],"mappings":";;;iBAIaA,U;;;;;;;;;;;;;AAJb;AACA;AACA;AACA;4BACaA,U,GAAN,MAAMA,UAAN,CAAiB;AACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACgC,eAArBC,qBAAqB,CAACC,IAAD,EAAiBC,IAAjB,EAAiCC,MAAjC,EAA0D;AAClF;AACAF,UAAAA,IAAI,CAACG,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAxB;AACAJ,UAAAA,IAAI,CAACE,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAxB;AACA,cAAIC,IAAI,GAAG,CAAX;AACA,cAAIC,KAAK,GAAGN,IAAI,CAACO,MAAL,GAAc,CAA1B;;AACA,iBAAOF,IAAI,GAAGN,IAAI,CAACQ,MAAZ,IAAsBD,KAAK,IAAI,CAAtC,EAAyC;AACrC,gBAAME,GAAG,GAAGT,IAAI,CAACM,IAAD,CAAJ,GAAaL,IAAI,CAACM,KAAD,CAA7B;;AACA,gBAAIE,GAAG,KAAKP,MAAZ,EAAoB;AAChB,qBAAO,IAAP,CADgB,CACH;AAChB,aAFD,MAEO,IAAIO,GAAG,GAAGP,MAAV,EAAkB;AACrBI,cAAAA,IAAI,GADiB,CACb;AACX,aAFM,MAEA;AACHC,cAAAA,KAAK,GADF,CACM;AACZ;AACJ;;AACD,iBAAO,KAAP,CAhBkF,CAgBpE;AACjB;;AAzBmB,O","sourcesContent":["/** Created by Naiking.\r\n *  2024-05-10 14:28:13\r\n *  \r\n */\r\nexport class CheckArray {\r\n    /**\r\n     * 检测两个数组里的元素是否可以组成某个数的和\r\n     * @param arr1 \r\n     * @param arr2 \r\n     * @param sum \r\n     * @returns \r\n     */\r\n    static checkDoubleAryWithSum(arr1: number[], arr2: number[], target: number): boolean {\r\n        // 先排序\r\n        arr1.sort((a, b) => a - b);\r\n        arr2.sort((a, b) => a - b);\r\n        let left = 0;\r\n        let right = arr2.length - 1;\r\n        while (left < arr1.length && right >= 0) {\r\n            const sum = arr1[left] + arr2[right];\r\n            if (sum === target) {\r\n                return true; // 找到了一对和为 target 的元素\r\n            } else if (sum < target) {\r\n                left++; // 和太小,需要增加左指针\r\n            } else {\r\n                right--; // 和太大,需要减小右指针\r\n            }\r\n        }\r\n        return false; // 没有找到合适的元素对\r\n    }\r\n}"]}