{"version":3,"sources":["file:///C:/win11_PD/naiknig/gitee/interview-questions_-joycastle/assets/scripts/Test.ts"],"names":["_decorator","Color","Component","EditBox","error","instantiate","Layout","Prefab","ScrollView","Item","CheckArray","ccclass","property","Test","type","_colorAry","RED","GREEN","BLUE","MAGENTA","YELLOW","colorMap","rateX","rateY","baseRate","callDraw","row","input_row","string","Number","inputFlag","column","input_column","scrollView","content","removeAllChildren","getComponent","constraintNum","length","i","colorIdx","j","getRandom","getColorByIndex","node","itemPrefab","addChild","setColor","start","a","b","v","rst","checkDoubleAryWithSum","console","log","Math","floor","random","m","n","left","up","targetRate","otherRate","rdm","randomExclude","leftRate","upRate","randomExcludeAry","arr","excludeAry","filtered","filter","num","randomIndex","randomNum","excludeNum","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, EditBox, error, instantiate, Layers, Layout, log, Node, Prefab, ScrollView } from 'cc';\r\nimport { Item } from './Item';\r\nimport { CheckArray } from './CheckArray';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Test')\r\nexport class Test extends Component {\r\n    @property({type:EditBox})\r\n    input_row:EditBox=null;\r\n    @property({type:EditBox})\r\n    input_column:EditBox=null;\r\n    @property({type:ScrollView})\r\n    scrollView:ScrollView=null;\r\n    @property({type:Prefab})\r\n    itemPrefab:Prefab=null;\r\n    private _colorAry:Array<Color>=[Color.RED,Color.GREEN,Color.BLUE,Color.MAGENTA,Color.YELLOW];\r\n    private colorMap:Array<Array<number>>=[];\r\n    private rateX=0.02;//前一个 或 上面的相同时的概率增加X\r\n    private rateY=0.03;//前一个和上一个同时相同增加的概率Y\r\n    private baseRate=0.2;//平均概率 5种颜色的\r\n    callDraw():void{\r\n        \r\n        let row=this.input_row.string==''?Number(this.input_row.inputFlag):Number(this.input_row.string);\r\n        let column=this.input_column.string==''?Number(this.input_column.inputFlag):Number(this.input_column.string);\r\n        this.scrollView.content.removeAllChildren();\r\n        this.scrollView.content.getComponent(Layout).constraintNum=column;\r\n        this.colorMap.length=0;\r\n\r\n        for(let i=0;i<row;i++){\r\n            this.colorMap[i]=[];\r\n            let colorIdx=0;\r\n            for(let j=0;j<column;j++){\r\n                if(i==0&&j==0){\r\n                    colorIdx=this.getRandom();\r\n                   \r\n                }else{\r\n                     colorIdx=this.getColorByIndex(i,j);\r\n                }\r\n                this.colorMap[i][j]=colorIdx;\r\n               let node= instantiate(this.itemPrefab);\r\n               this.scrollView.content.addChild(node);\r\n             \r\n               \r\n               node.getComponent(Item).setColor(this._colorAry[colorIdx]);\r\n               \r\n            }\r\n        }\r\n    }\r\n    start() {\r\n        let a = [10, 40, 5, 280];\r\n        let b = [234, 5, 2, 148, 23];\r\n        let v = 42;\r\n        let rst=CheckArray.checkDoubleAryWithSum(a,b,v);\r\n        console.log(rst);\r\n    }\r\n    getRandom(){\r\n        return Math.floor(Math.random()*this._colorAry.length);\r\n    }\r\n    getColorByIndex(m:number,n:number){\r\n        let left=this.colorMap[m][n-1];\r\n        let up=this.colorMap[m-1]?this.colorMap[m-1][n]:null;\r\n        if (left&&up&&left == up) {\r\n            //该色只增加Y的概率\r\n            let targetRate=this.rateY+this.baseRate;\r\n            let otherRate=0.25*(1-targetRate);\r\n            let rdm=Math.random();\r\n            if(rdm<targetRate){\r\n                //命中\r\n                return left;\r\n            }else{\r\n                //从其他颜色中随机\r\n                return this.randomExclude([0,1,2,3,4],left)\r\n            }\r\n\r\n        }else{\r\n            let leftRate=this.rateX+this.baseRate;\r\n            let upRate=this.rateX+this.baseRate;\r\n            let rdm=Math.random();\r\n            if(left&&rdm<=leftRate){\r\n                return left;\r\n            }\r\n            if(up&&rdm<=leftRate+upRate){\r\n                return up;\r\n            }\r\n            //其他颜色随机\r\n            return this.randomExcludeAry([0,1,2,3,4],[left,up]);\r\n        }\r\n    }\r\n    randomExcludeAry(arr: number[], excludeAry: number[]): number | null {\r\n        // 过滤出不等于excludeNum的数字\r\n        const filtered = arr.filter(num => (num !== excludeAry[0]&&num !== excludeAry[1]));\r\n    \r\n        // 如果过滤后的数组为空,返回null\r\n        if (filtered.length === 0) {\r\n            error(\"数组为空 90\",arr,excludeAry);\r\n            return null;\r\n        }\r\n    \r\n        // 从过滤后的数组中随机选取一个数字\r\n        const randomIndex = Math.floor(Math.random() * filtered.length);\r\n        const randomNum = filtered[randomIndex];\r\n    \r\n        return randomNum;\r\n    }\r\n    randomExclude(arr: number[], excludeNum: number): number | null {\r\n        // 过滤出不等于excludeNum的数字\r\n        const filtered = arr.filter(num => num !== excludeNum);\r\n    \r\n        // 如果过滤后的数组为空,返回null\r\n        if (filtered.length === 0) {\r\n            error(\"数组为空\",arr,excludeNum);\r\n            return null;\r\n        }\r\n    \r\n        // 从过滤后的数组中随机选取一个数字\r\n        const randomIndex = Math.floor(Math.random() * filtered.length);\r\n        const randomNum = filtered[randomIndex];\r\n    \r\n        return randomNum;\r\n    }\r\n    \r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}